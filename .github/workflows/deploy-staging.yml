name: Staging Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the ci branch
  push:
    branches: [staging]


env:
  # hack to bypass node warning
  CI: false
  NINJA_NPM_TOKEN: ${{ secrets.NINJA_NPM_TOKEN }}
  FONTAWESOME_TOKEN: ${{ secrets.FONTAWESOME_TOKEN }}
  XGRID_LICENSE_KEY: ${{ secrets.XGRID_LICENSE_KEY }}
  REACT_APP_PASSPORT_API_ENDPOINT_HOSTNAME: api.xsyn.dev
  REACT_APP_SENTRY_DSN_FRONTEND: https://f389e257602342899d1639d9c0c7f476@o370480.ingest.sentry.io/6194602
  REACT_APP_SENTRY_ENVIRONMENT: staging
  REACT_APP_SENTRY_SAMPLERATE: 1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-20.04
    outputs:
      artifact_filename: ${{ steps.artifact.outputs.filename }}
      version: ${{ steps.version.outputs.v }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # cache npm dependencies
      # https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/
      - name: Cache npm
        if: ${{ !env.ACT }} # if running in local test environment
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('./package-lock.json') }}

      - name: Install npm packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Set prerelease tag and push tag
        run: |
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
          git config --global user.name "Github CI"
          git config --global user.email "team@syndicate.ninja"
          npm version prerelease --allow-same-version --preid rc
          echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "REACT_APP_SENTRY_CURRENT_RELEASE_NAME=syndicate-passport_web@$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build web
        run: CI=false npm run build

      - name: Push tags and commit
        run: |
          git push
          git push --tags
      # list build folder recursively
      - name: List build dir
        run: find build

      - id: artifact
        run: echo "::set-output name=filename::passport-api_${{env.GITVERSION}}.tar"
      - id: version
        run: echo "::set-output name=v::${{env.GITVERSION}}"

      - name: tar deploy directory
        run: tar -cvf ${{ steps.artifact.outputs.filename }} ./build
      
      - name: save artifact
        uses: actions/upload-artifact@v2
        if: ${{ !env.ACT }} # if running in local test environment
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ${{ steps.artifact.outputs.filename }}
  deploy:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        if: ${{ !env.ACT }} # if running in local test environment
        with:
          name: ${{ needs.build.outputs.artifact_filename }}

      - name: untar build directory
        run: tar -xvf ${{ needs.build.outputs.artifact_filename }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo -e "Host api.xsyn.dev\n  User ${{ secrets.STAGING_SSH_USER }}\n Port ${{ secrets.STAGING_SSH_PORT }}" >> ~/.ssh/config
          echo '${{ secrets.STAGING_KNOWN_HOSTS }}' > ~/.ssh/known_hosts
          echo '${{ secrets.STAGING_SSH_PKEY }}' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Rsync to server
        if: ${{ !env.ACT }} # if running in local test environment
        run: rsync -av build/ api.xsyn.dev:/usr/share/ninja_syndicate/passport-web_${{ needs.build.outputs.version }}

      - name: Bring new version online
        if: ${{ !env.ACT }} # if running in local test environment
        run: ssh api.xsyn.dev 'ln -Tfsv /usr/share/ninja_syndicate/passport-web_${{ needs.build.outputs.version }} /usr/share/ninja_syndicate/passport-web_online'
